server:
  port: 9001

#kafka集群地址
spring:
  kafka:
    bootstrap-servers:
      - 192.168.2.2:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      retries: 0
      acks: 1
      batch-size: 16384
      buffer-memory: 33554432
    consumer:
      enable-auto-commit: true
      auto-commit-interval: 100
      group-id: t1
      auto-offset-reset: latest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  #生产者配置
  #系列化方式
  #重试次数
  #采用的ack机制
  #批量提交的数据大小 16kb
  #生产者暂存数据的缓冲区大小
  #消费者配置
  #是否自动提交偏移量
  #消费消息后间隔多长时间提交偏移量
  #默认的消费者组，代码中可以热键修改
  # earliest:当各分区下有已提交的offset时，从提交的offset开始消费；无提交的offset时，从头开始消费
  # latest:当各分区下有已提交的offset时，从提交的offset开始消费；无提交的offset时，消费新产生的该分区下的数据
  # none:topic各分区都存在已提交的offset时，从offset后开始消费；只要有一个分区不存在已提交的offset，则抛出异常
  #系列化方式

  redis:
    host: 192.168.2.2
    port: 6379
    #password: 1234
    database: 0
    lettuce:
      pool:
        max-active: 8 #最大连接数
        max-idle: 8 #最大空闲连接
        min-idle: 0 #最小空闲连接
        max-wait: 100 #连接等待时间


