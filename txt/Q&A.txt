1.内部类能访问所在类的私有属性，特点
2.局部覆盖原则，在内部类中访问的属性，如果出现三级名称相同，可以通过
	number， this.number， 外部类名.this.number 访问不同层级
	内部类会维护一个outter.this的实例对象，用来访问外部类的属性。这点和static修饰的内部类不同
	内部类也有一个自己的this实例
3. 非静态内部类不能定义静态的属性
   静态内部类是可以访问外部的静态属性，包括私有
4.静态内部类首先是类，静态内部类是需要有实例才能调用非静态的方法

--------------------------------------------------------------------------------
sso
1.需要一个服务端，用来颁发token,refreshtoken。也就是需要一个生成token的地方
  和校验token的服务
2.一个网关或者过滤，来拦截除了登录的请求。然后取出token去校验，注意token是
  前端提前通过服务端获取到，然后自己保存起来，每次访问任何请求都要在请求头中携带
3.

正向代理：就是客户端和代理服务器为整体，代理的是客户端，在本地使用代理服务器，例如VPN,翻墙
反向代理：是服务端和代理服务器为整体，代理的是服务端，和服务端在一起。类似于网关

--------------------------------------------------------------------------------
单例
 1.单例对象：是当前服务中是始终一个对象，是指在一个JVM进程中仅有一个实例。一处设置处处使用
模版方法
 1.公共代码抽取，
 2.父类控制行为子类实现，封装不变部分，
 3.重写可变部分，易拓展
 4.项目体积大